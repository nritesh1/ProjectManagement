{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_components/nav/nav/nav.component.css","webpack:///./src/app/_components/nav/nav/nav.component.html","webpack:///./src/app/_components/nav/nav/nav.component.ts","webpack:///./src/app/_components/project/project.component.css","webpack:///./src/app/_components/project/project.component.html","webpack:///./src/app/_components/project/project.component.ts","webpack:///./src/app/_components/task/task.component.css","webpack:///./src/app/_components/task/task.component.html","webpack:///./src/app/_components/task/task.component.ts","webpack:///./src/app/_components/user/user.component.css","webpack:///./src/app/_components/user/user.component.html","webpack:///./src/app/_components/user/user.component.ts","webpack:///./src/app/_components/viewtask/viewtask.component.css","webpack:///./src/app/_components/viewtask/viewtask.component.html","webpack:///./src/app/_components/viewtask/viewtask.component.ts","webpack:///./src/app/_services/project.service.ts","webpack:///./src/app/_services/task.service.ts","webpack:///./src/app/_services/user.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-inverse navbar-fixed\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <!-- Brand and toggle get grouped for better mobile display -->\\n    <div class=\\\"navbar-header\\\">\\n      <a class=\\\"navbar-brand\\\"[routerLink]=\\\"['/projects']\\\">Project Manager</a>\\n    </div>\\n\\n    <!-- Collect the nav links, forms, and other content for toggling -->\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li routerLinkActive=\\\"active\\\"><a [routerLink]=\\\"['/users']\\\">Add User</a></li>\\n        <li routerLinkActive=\\\"active\\\"><a [routerLink]=\\\"['/projects']\\\">Add Project</a></li>\\n        <li routerLinkActive=\\\"active\\\"><a [routerLink]=\\\"['/tasks']\\\">Add Task</a></li>\\n        <li routerLinkActive=\\\"active\\\"><a [routerLink]=\\\"['/viewtask']\\\">View Task</a></li>\\n\\n      </ul>\\n    </div><!-- /.navbar-collapse -->\\n  </div><!-- /.container-fluid -->\\n</nav>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".form-control{\\r\\n    width: 250px;\\r\\n    display: inline;\\r\\n    margin-right: 5px;\\r\\n}\\r\\n.row{\\r\\n    margin-top: 5px;\\r\\n     margin-bottom: 5px;\\r\\n}\\r\\n.btn btn-primary\\r\\n{\\r\\npadding-right: 10px;\\r\\n}\\r\\n.error {\\r\\n    color: red;    \\r\\n    font-size: 12px;\\r\\n    font-style: italic;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div>\\n  <form #projectForm=\\\"ngForm\\\" (ngSubmit)=\\\"submit(projectForm)\\\" name=\\\"ngform\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"panel panel-primary\\\">\\n        <div class=\\\"panel-heading\\\">Add Projects</div>\\n        <div class=\\\"panel-body\\\">\\n          <div class=\\\"form-group\\\" [class.has-error]=\\\"projectName.touched && projectName.invalid\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-3\\\">\\n                <label for=\\\"ProjectName\\\" class=\\\"control-label\\\">Project Name</label>\\n              </div>\\n              <div class=\\\"col-sm-8\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter project Name\\\" id=\\\"ProjectName\\\" name=\\\"projectname\\\" [(ngModel)]=\\\"projectData.ProjectName\\\"\\n                  required #projectName=\\\"ngModel\\\" minlength=\\\"10\\\">\\n                  <div *ngIf=\\\"projectName.touched && projectName.invalid\\\">\\n                    <span class=\\\"error\\\" *ngIf=\\\"projectName.errors?.required\\\">Name is required</span>\\n                    <span class=\\\"error\\\" *ngIf=\\\"projectName.errors?.minlength\\\">Minimum length is\\n                {{projectName.errors.minlength.requiredLength}}</span>\\n                  </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\" [class.has-error]=\\\"startDate.touched && startDate.invalid  && endDate.touched && endDate.invalid && startDate > endDate\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-3\\\">\\n                <input id=\\\"chkStartEnd\\\" type=\\\"checkbox\\\" name=\\\"chkdate\\\" (change)=\\\"triggerEnableDate()\\\">\\n                <label for=\\\"chkStartEnd\\\">Set Start and End Date:</label>\\n              </div>\\n              <div class=\\\"col-sm-8\\\">\\n                <input id=\\\"StartDate\\\" class=\\\"form-control\\\" name=\\\"startdate\\\" type=\\\"date\\\" [disabled]=\\\"isDisabled\\\" [ngModel]=\\\"projectData.StartDate | date:'yyyy-MM-dd'\\\"\\n                  required #startDate=\\\"ngModel\\\">\\n                  <input id=\\\"EndDate\\\" type=\\\"date\\\" name=\\\"enddate\\\" [ngModel]=\\\"projectData.EndDate | date:'yyyy-MM-dd'\\\" [disabled]=\\\"isDisabled\\\" (onblur)=\\\"compareTwoDates(projectForm)\\\"\\n                    class=\\\"form-control\\\" required #endDate=\\\"ngModel\\\">\\n                    <div *ngIf=\\\"startDate.touched && startDate.invalid && endDate.touched && endDate.invalid && startDate > endDate\\\">\\n                      <span class=\\\"error\\\" *ngIf=\\\"startDate.errors?.required\\\">StartDate and EndDate is required</span>\\n                    </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\" [class.has-error]=\\\"priority.touched && priority.invalid\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-3\\\">\\n                <label for=\\\"txtPriority\\\">Priority:</label> </div>\\n              <div class=\\\"col-sm-8 \\\">\\n                <input id=\\\"rgPriority\\\" [(ngModel)]=\\\"projectData.Priority\\\" name=\\\"Priority\\\" type=\\\"range\\\" min=\\\"0\\\" max=\\\"30\\\" value=\\\"0\\\" class=\\\"form-control\\\"\\n                  required #priority=\\\"ngModel\\\">\\n                  <div *ngIf=\\\"priority.touched && priority.invalid\\\">\\n                    <span class=\\\"error\\\" *ngIf=\\\"priority.errors?.required\\\">Priority is required</span>\\n                  </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"row \\\">\\n              <div class=\\\"col-sm-3\\\">\\n                <label for=\\\"txtManager\\\" name=\\\"manager\\\">Manager:</label>\\n              </div>\\n              <div class=\\\"col-sm-8\\\">\\n                <input id=\\\"txtManager\\\" type=\\\"text\\\" placeholder=\\\"Select Manager\\\" class=\\\"form-control\\\" name=\\\"manager\\\" [(ngModel)]=\\\"username\\\"\\n                  disabled #manager=\\\"ngModel\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" style=\\\"width:85px;\\\" name=\\\"btnsearch\\\" (click)=\\\"openModal(template)\\\">Search</button>\\n                  <ng-template #template>\\n                    <div class=\\\"modal-header\\\">\\n                      <h4 class=\\\"modal-title pull-left\\\">User Names</h4>\\n                      <button type=\\\"button\\\" name=\\\"close\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">      \\n                        <span aria-hidden=\\\"true\\\">&times;</span></button>\\n                    </div>\\n                    <div class=\\\"modal-body\\\">\\n                      <select ng-model=\\\"modelpopup\\\" class=\\\"form-control\\\"  ng-app [(ngModel)]=\\\"user_ID\\\" (change)=\\\"onChange($event)\\\" name=\\\"modelpopup\\\">\\n                      <option value=\\\"\\\" selected disabled hidden>Choose here</option>\\n                     <option *ngFor = \\\"let user of users \\\" value={{user.User_ID}}  >{{user.FirstName}}  {{user.LastName}} </option>\\n                     </select>\\n                      <button (click)=\\\"modalRef.hide()\\\" class=\\\"btn btn-primary\\\">OK</button>\\n                    </div>\\n                  </ng-template>\\n\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"panel-footer\\\">\\n          <div class=\\\"row \\\">\\n            <div class=\\\"col-sm-3\\\"></div>\\n            <div class=\\\"col-sm-8\\\">\\n              <div class=\\\"pull-right\\\">\\n                <button class=\\\"btn btn-md btn-primary\\\" style=\\\"width:85px;\\\" [disabled]=\\\"projectForm.invalid\\\">Submit</button> &nbsp;\\n                <button type=\\\"reset\\\" style=\\\"width:85px;\\\" (click)=\\\"reset()\\\" class=\\\"btn btn-success\\\">Reset</button>\\n              </div>\\n              <div class=\\\"clearfix\\\"></div>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </form>\\n  <div style=\\\"margin-left: 25px;\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-4\\\">\\n        <label for=\\\"txtSearch\\\">Search:</label>\\n        <input id=\\\"Search\\\" type=\\\"text\\\" placeholder=\\\"Enter text to search\\\" class=\\\"form-control\\\" name=\\\"Search\\\" [(ngModel)]=\\\"ProjectName\\\"\\n          required #Search=\\\"ngModel\\\"></div>\\n      <div class=\\\"col-sm-8  pull-right\\\">\\n        <label for=\\\"lblSort\\\">Sort By: </label>\\n        <button name=\\\"StartDate\\\" class=\\\"btn btn-primary btn-md\\\" id=\\\"StartDate\\\" style=\\\"width:85px;\\\" (click)=\\\"sort('StartDate')\\\">StartDate\\n            </button>&nbsp;\\n        <button name=\\\"EndDate\\\" class=\\\"btn btn-primary btn-md\\\" id=\\\"EndDate\\\" style=\\\"width:85px;\\\" (click)=\\\"sort('EndDate')\\\">EndDate\\n            </button>&nbsp;\\n        <button name=\\\"Priority\\\" class=\\\"btn btn-primary btn-md\\\" id=\\\"Priority\\\" style=\\\"width:85px;\\\" (click)=\\\"sort('Priority')\\\">Priority\\n            </button>&nbsp;\\n        <button name=\\\"Completed\\\" class=\\\"btn btn-primary btn-md\\\" id=\\\"Completed\\\" style=\\\"width:85px;\\\" (click)=\\\"sort('Completed')\\\">Completed\\n            </button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\" *ngFor=\\\"let proj of projects | filter :ProjectName\\\">\\n      <div class=\\\"col-sm-8\\\" style=\\\"background-color:lightgray;\\\"> Project: {{proj.ProjectName}}\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-6\\\" style=\\\"background-color:lightgray;\\\"> </div>\\n          <div class=\\\"col-sm-6\\\" style=\\\"background-color:lightgray;\\\"> </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-6\\\" style=\\\"background-color:lightgray;\\\"> No of Tasks: {{proj.Tasks.length}}</div>\\n          <div class=\\\"col-sm-6\\\" style=\\\"background-color:lightgray;\\\"> Completed: {{ (proj.Tasks | filter : Status:'Completed').length }}</div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-6\\\" style=\\\"background-color:lightgray;\\\"> </div>\\n          <div class=\\\"col-sm-6\\\" style=\\\"background-color:lightgray;\\\"> </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-6\\\" style=\\\"background-color:lightgray;\\\"> Start Date: {{proj.StartDate}}</div>\\n          <div class=\\\"col-sm-6\\\" style=\\\"background-color:lightgray;\\\"> End Date: {{proj.EndDate}}</div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-6\\\" style=\\\"background-color:lightgray;\\\"> </div>\\n          <div class=\\\"col-sm-6\\\" style=\\\"background-color:lightgray;\\\"> </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-sm-4\\\">\\n        <div class=\\\"col-sm-3\\\" style=\\\"background-color:lightgray; \\\">\\n          <label for=\\\"txtPriority\\\" name=\\\"Priority\\\"> Priority</label>\\n          <div class=\\\"row\\\"><div class=\\\"col-sm-3\\\"></div></div> \\n          <div class=\\\"row\\\"><div class=\\\"col-sm-3\\\"></div></div>\\n          <div class=\\\"row\\\"><div class=\\\"col-sm-3\\\" style=\\\"background-color:lightgray; \\\">\\n              {{proj.Priority}}</div></div>\\n           <div class=\\\"row\\\"><div class=\\\"col-sm-3\\\"></div></div> \\n           <div class=\\\"row\\\"><div class=\\\"col-sm-3\\\"></div></div> \\n           <div class=\\\"row\\\"><div class=\\\"col-sm-3\\\"></div></div>\\n           <div class=\\\"row\\\"><div class=\\\"col-sm-3\\\"></div></div>\\n        </div>\\n        <div class=\\\"col-sm-1\\\">\\n          <button class=\\\"btn btn-primary btn-md\\\" (click)=\\\"edit(proj.Project_ID)\\\" name=\\\"Edit\\\" style=\\\"width:85px;\\\" id=\\\"Edit\\\">  Edit\\n            </button>&nbsp;\\n          <button class=\\\"btn btn-primary btn-md\\\" (click)=\\\"delete(proj.Project_ID)\\\" name=\\\"Suspend\\\" style=\\\"width:85px;\\\" id=\\\"Suspend\\\">  Suspend\\n            </button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit, NgProbeToken, TemplateRef } from '@angular/core';\nimport { Form, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ProjectService } from 'src/app/_services/project.service';\nimport { ProjectData } from 'src/app/_models/project.data';\nimport { UserService } from 'src/app/_services/user.service';\nimport { UserData } from 'src/app/_models/user.data';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\n@Component({\n  selector: 'app-project',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.css']\n})\nexport class ProjectComponent implements OnInit {\n  private user_ID: number;\n  private username: string;\n    private todate = new Date();\n  //this.todate.setDate( this.date.getDate() + 1 );\n  projects: ProjectData[]; \n  isEdit: boolean;\n  projectId: number;\n  projectData: ProjectData = { Project_ID: null, ProjectName: '', StartDate:  new Date(), EndDate: this.todate, Priority: 0, User_ID: null, Users: null,Tasks:null }\n  users: UserData[];\n  userData: UserData = { User_ID: null, FirstName: '', LastName: '', Employee_ID: null, Project_ID: null, Task_ID: null }\n\n  ngOnInit() {\n    this.projectService.getProjects()\n      .subscribe(response => {\n        this.projects = response;\n        console.log(response);\n        //this.projectData.TaskCount=this.projects.\n      })\n    this.userService.getUsers()\n      .subscribe(response => {\n        this.users = response;\n        console.log(response);\n      });\nthis.todate.setDate( this.todate.getDate() + 1 );\n    \n  }\n  public modalRef: BsModalRef; // {1}\n  constructor(private modalService: BsModalService, private userService: UserService, private projectService: ProjectService, private router: Router) { } // {2}\n\n\n  public openModal(template: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(template);// {3}\n  }\n\n  isDisabled = true;\n  triggerEnableDate() {\n      this.isDisabled = !this.isDisabled;\n      return;\n  }\n\n  onChange(event: any) {\n    this.username = event.target.options[event.target.options.selectedIndex].text;\n    this.user_ID = event.target.options[event.target.options.selectedIndex].value;\n  }\n  submit(form: FormGroup) {\n    const request = form.value;\n    request.user_ID = this.user_ID.toString();\n    if (!this.endDateAfterOrEqualValidator(form))\n      alert('Project End date should be greater than Start date.');\n    else if (!this.isEdit) {\n      this.projectService.saveProject(request)\n        .subscribe(response => {\n          this.projects.push(response);\n          confirm('Project Details Saved Successfully');\n        }, error => {\n          for (const key of Object.keys(error.error.ModelState)) {\n            for (const err of error.error.ModelState[key]) {\n              alert(err);\n            }\n          }\n        }, () => {\n          form.reset();\n        })\n    } else {\n      request.Project_ID = this.projectId;\n      this.projectService.saveProject(request)\n        .subscribe(project => {\n          var projIndex = this.projects.findIndex(proj => proj.Project_ID == this.projectId);\n\n          if (projIndex != -1) {\n            this.projects[projIndex] = project;\n          }\n          confirm('Project Details Updated Successfully');\n        }, error => {\n          for (const key of Object.keys(error.error.ModelState)) {\n            for (const err of error.error.ModelState[key]) {\n              alert(err);\n            }\n          }\n        }, () => {\n          form.reset();\n          this.isEdit = false;\n        })\n    }\n  }\n\n  delete(id: number) {\n    let isDelete = confirm('Do you wish to delete the Project?')\n\n    if (isDelete) {\n      this.projectService.deleteProject(id)\n        .subscribe(response => {\n          if (response) {\n            const projIndex = this.projects.findIndex(proj => proj.Project_ID == id);\n            if (projIndex != -1) {\n              this.projects.splice(projIndex, 1);\n            }\n          }\n        });\n    }\n  }\n\n  edit(id: number) {\n    this.projectService.getProject(id)\n      .subscribe(project => {\n\n        this.projectData.ProjectName = project.ProjectName;\n        this.projectData.StartDate = project.StartDate;\n        this.projectData.EndDate = project.EndDate;\n        this.projectData.Priority = project.Priority;\n        this.projectData.User_ID = project.User_ID;\n        this.user_ID = project.User_ID;\n        console.log(project.User_ID);\n        this.username = this.users.find(i => i.User_ID == project.User_ID).FirstName + '  ' + this.users.find(i => i.User_ID == project.User_ID).LastName;\n        this.isEdit = true;\n        this.projectId = id;\n      })\n  }\n\n  reset()\n  {\n    this.isDisabled = true;\n  }\n\n  sort(param: any) {\n    if (param == 'StartDate') {\n      this.projectService.getProjects()\n        .subscribe(response => {\n          this.projects = response.sort((a, b) => {\n            return <any>new Date(b.StartDate) - <any>new Date(a.StartDate);\n          });\n        })\n    }\n    if (param == 'EndDate') {\n      this.projectService.getProjects()\n        .subscribe(response => {\n          this.projects = response.sort((a, b) => {\n            return <any>new Date(b.StartDate) - <any>new Date(a.StartDate);\n          });\n        })\n    }\n    if (param == 'Priority') {\n      this.projectService.getProjects()\n        .subscribe(response => {\n          this.projects = response.sort((a, b) => a.Priority.toString().localeCompare(b.Priority.toString(), undefined, { numeric: true }));\n        });\n    }\n      if (param == 'Completed') {\n      this.projectService.getProjects()\n         .subscribe(response => {\n          this.projects = response.sort((a, b) => a.Priority.toString().localeCompare(b.Priority.toString(), undefined, { numeric: true }));\n        }); \n      }\n  }\n  endDateAfterOrEqualValidator(formGroup:FormGroup){\n    var startDateTimestamp, endDateTimestamp;\n    for (var controlName in formGroup.controls) {\n      if (controlName.indexOf(\"startdate\") !== -1) {\n        startDateTimestamp = Date.parse(formGroup.controls[controlName].value);\n      }\n      if (controlName.indexOf(\"enddate\") !== -1) {\n        endDateTimestamp = Date.parse(formGroup.controls[controlName].value);\n      }\n    }\n    return (endDateTimestamp < startDateTimestamp) ? false : true;\n  }\n  compareTwoDates(form:FormGroup){\n   if(new Date(form.controls['StartDate'].value)<new Date(form.controls['EndDate'].value)){\n      //this.error={isError:true,errorMessage:'End Date can't before start date'};\n      return false;\n   }\n}\n  view(id: number) {\n    this.router.navigate(['/projects', id]);\n  }\n\n}","module.exports = \".form-control{\\r\\n    width: 350px;\\r\\n    display: inline;\\r\\n    margin-right: 5px;\\r\\n}\\r\\n.row{\\r\\n    margin-top: 5px;\\r\\n}\\r\\n.btn btn-primary\\r\\n{\\r\\npadding-right: 10px;\\r\\n}\\r\\n.error {\\r\\n    color: red;    \\r\\n    font-size: 12px;\\r\\n    font-style: italic;\\r\\n}\\r\\n.wrapper {\\r\\n  height: 100%;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n.modal-header {\\r\\n  background: #337ab7;\\r\\n}\\r\\n.modal-body {\\r\\n  height: 200px;\\r\\n  flex: 1;\\r\\n  overflow: auto; \\r\\n}\"","module.exports = \"<div>\\n  <form #taskForm=\\\"ngForm\\\" (ngSubmit)=\\\"submit(taskForm)\\\" name=\\\"ngform\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"panel panel-primary\\\">\\n        <div class=\\\"panel-heading\\\">{{title}}</div>\\n        <div class=\\\"panel-body\\\">\\n          <div class=\\\"form-group\\\" [class.has-error]=\\\"projectName.touched && projectName.invalid\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-3\\\">\\n                <label for=\\\"ProjectName\\\" class=\\\"control-label\\\">Project: </label>\\n              </div>\\n              <div class=\\\"col-sm-8\\\">\\n                <input type=\\\"text\\\" placeholder=\\\"Select Project\\\" disabled class=\\\"form-control\\\" id=\\\"ProjectName\\\" name=\\\"ProjectName\\\" [(ngModel)]=\\\"projectname\\\"\\n                  required #projectName=\\\"ngModel\\\" minlength=\\\"10\\\">\\n                  <button type=\\\"button\\\" style=\\\"width:85px;\\\" class=\\\"btn btn-info\\\" (click)=\\\"openModal(projecttemplate)\\\" style=\\\"width:85px;\\\" name=\\\"Search\\\">Search</button>\\n                  <ng-template #projecttemplate>\\n                    <div class=\\\"modal-header\\\">\\n                      <h4 class=\\\"modal-title pull-left\\\">Project Names</h4>\\n                      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\" name=\\\"Close\\\">      \\n                        <span aria-hidden=\\\"true\\\">&times;</span></button>\\n                    </div>\\n                    <div class=\\\"modal-body\\\" style=\\\"height: 200px;\\\">\\n                      <select class=\\\"form-control\\\" ng-model=\\\"projectList\\\" ng-app [(ngModel)]=\\\"project_ID\\\" (change)=\\\"onChange($event)\\\" name=\\\"projectList\\\">\\n                        <option value=\\\"\\\" selected disabled hidden>Choose here</option>\\n                     <option *ngFor = \\\"let proj of projects\\\" value={{proj.Project_ID}} >{{proj.ProjectName}}</option>\\n                     </select>\\n                    \\n                    </div>  <div class=\\\"modal-footer\\\">\\n                        <div class=\\\"pull-right\\\">\\n                          <button class=\\\"btn btn-success\\\" (click)=\\\"modalRef.hide()\\\">OK</button>\\n                        </div>\\n                      </div>\\n                  </ng-template>\\n                  <div *ngIf=\\\"projectName.touched && projectName.invalid\\\">\\n                    <span class=\\\"error\\\" *ngIf=\\\"projectName.errors?.required\\\">Name is required</span>\\n                  </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\" [class.has-error]=\\\"taskName.touched && taskName.invalid\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-3\\\">\\n                <label for=\\\"TaskName\\\" class=\\\"control-label\\\">Task: </label>\\n              </div>\\n              <div class=\\\"col-sm-8\\\">\\n                <input type=\\\"text\\\" placeholder=\\\"Enter Task Name\\\" class=\\\"form-control\\\" id=\\\"TaskName\\\" name=\\\"TaskName\\\" [(ngModel)]=\\\"taskData.TaskName\\\"\\n                  required #taskName=\\\"ngModel\\\" minlength=\\\"10\\\">\\n                  <div *ngIf=\\\"taskName.touched && taskName.invalid\\\">\\n                    <span class=\\\"error\\\" *ngIf=\\\"taskName.errors?.required\\\">Name is required</span>\\n                    <span class=\\\"error\\\" *ngIf=\\\"taskName.errors?.minlength\\\">Minimum length is\\n                {{taskName.errors.minlength.requiredLength}} </span>\\n                  </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-3\\\">\\n              </div>\\n              <div class=\\\"col-sm-8\\\">\\n                <input id=\\\"chkParenttask\\\" type=\\\"checkbox\\\" name=\\\"chkdate\\\"  #chkEnable ng-model>\\n                <label for=\\\"chkParenttask\\\">Parent Task</label>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\" [class.has-error]=\\\"priority.touched && priority.invalid\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-3\\\">\\n                <label for=\\\"txtPriority\\\">Priority:</label> </div>\\n              <div class=\\\"col-sm-8 \\\">\\n                <input id=\\\"Priority\\\" [(ngModel)]=\\\"taskData.Priority\\\" [disabled]=\\\"chkEnable.checked\\\" name=\\\"Priority\\\" type=\\\"range\\\" min=\\\"0\\\"\\n                  max=\\\"30\\\" class=\\\"form-control\\\" step=\\\"1\\\" required #priority=\\\"ngModel\\\">\\n                  <div *ngIf=\\\"priority.touched && priority.invalid\\\">\\n                    <span class=\\\"error\\\" *ngIf=\\\"priority.errors?.required\\\">Priority is required</span>\\n                  </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\" [class.has-error]=\\\"parenTtask.touched && parenTtask.invalid\\\">\\n            <div class=\\\"row \\\">\\n              <div class=\\\"col-sm-3 \\\">\\n                <label for=\\\"Parent_Task\\\">Parent Task:</label>\\n              </div>\\n              <div class=\\\"col-sm-8 \\\">\\n                <input id=\\\"Parent_Task\\\" disabled placeholder=\\\"Select Parent Task\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"Parent_Task\\\" [(ngModel)]=\\\"parenttask\\\"\\n                  required #parenTtask=\\\"ngModel\\\">\\n                  <button type=\\\"button\\\" style=\\\"width:85px;\\\" class=\\\"btn btn-info\\\" [disabled]=\\\"chkEnable.checked\\\" (click)=\\\"openModal(Parenttemplate)\\\"\\n                    name=\\\"Search\\\">Search</button>\\n\\n                    <ng-template #Parenttemplate class=\\\"wrapper\\\">\\n                      <div class=\\\"modal-header\\\">\\n                        <h4 class=\\\"modal-title pull-left \\\">Parent Tasks</h4>\\n                        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\" name=\\\"Close\\\">      \\n                        <span aria-hidden=\\\"true\\\">&times;</span></button>\\n                      </div>\\n                      <div class=\\\"modal-body\\\" >\\n                        \\n                        <!--<select ng-model=\\\"parentTaskList\\\" ng-app [(ngModel)]=\\\"parent_ID\\\" (change)=\\\"ontaskChange($event)\\\" class=\\\"form-control\\\" name=\\\"parentTaskList\\\">\\n                      <option value=\\\"\\\" selected disabled hidden>Choose here</option>\\n                     <option *ngFor = \\\"let parenttask of parenttasks\\\" value={{parenttask.Parent_ID}} >{{parenttask.Parent_Task}}</option>\\n                     </select>-->\\n\\n                     <ngx-select-dropdown [config]=\\\"config\\\" [options]=\\\"parenttasks\\\" (change)=\\\"ontaskChange($event)\\\"\\n            [(value)]=\\\"singleSelect\\\" [multiple]=\\\"false\\\" ></ngx-select-dropdown>\\n                      </div>  \\n                      <div class=\\\"modal-footer\\\" >\\n                        <div class=\\\"pull-right\\\">\\n                          <button (click)=\\\"modalRef.hide()\\\" class=\\\"btn btn-primary\\\">OK</button>\\n                        </div>\\n                      </div>\\n                    </ng-template>\\n\\n                    <div *ngIf=\\\"parenTtask.touched && parenTtask.invalid\\\">\\n                      <span class=\\\"error\\\" *ngIf=\\\"parenTtask.errors?.required\\\">parenTtask is required</span>\\n                    </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\" [class.has-error]=\\\"startDate.touched && startDate.invalid  && endDate.touched && endDate.invalid\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-3\\\">\\n                <label for=\\\"txtStartdate \\\">Start Date:</label>\\n\\n              </div>\\n              <div class=\\\"col-sm-8\\\">\\n                <input id=\\\"Start_Date\\\" [disabled]=\\\"chkEnable.checked\\\" class=\\\"form-control\\\" name=\\\"Start_Date\\\" type=\\\"date\\\" [ngModel]=\\\"taskData.Start_Date | date:'yyyy-MM-dd'\\\"\\n                  required #startDate=\\\"ngModel\\\">\\n              </div>\\n            </div>\\n\\n          </div>\\n          <div class=\\\"form-group\\\" [class.has-error]=\\\"startDate.touched && startDate.invalid  && endDate.touched && endDate.invalid\\\">\\n\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-3\\\">\\n                <label for=\\\"txtenddate\\\">End Date:</label>\\n\\n              </div>\\n              <div class=\\\"col-sm-8\\\">\\n\\n                <input id=\\\"End_Date\\\" [disabled]=\\\"chkEnable.checked\\\" type=\\\"date\\\" name=\\\"End_Date\\\" [ngModel]=\\\"taskData.End_Date | date:'yyyy-MM-dd'\\\"\\n                  class=\\\"form-control\\\" required #endDate=\\\"ngModel\\\">\\n                  <div *ngIf=\\\"startDate.touched && startDate.invalid && endDate.touched && endDate.invalid\\\">\\n                    <span class=\\\"error\\\" *ngIf=\\\"startDate.errors?.required\\\">StartDate and EndDate is required</span>\\n                  </div>\\n              </div>\\n            </div>\\n\\n          </div>\\n          <div class=\\\"form-group\\\" [class.has-error]=\\\"user.touched && user.invalid\\\">\\n            <div class=\\\"row \\\">\\n              <div class=\\\"col-sm-3 \\\">\\n                <label for=\\\"txtUser \\\">User:</label>\\n              </div>\\n              <div class=\\\"col-sm-8 \\\">\\n                <input id=\\\"txtUser\\\" placeholder=\\\"Select User\\\" disabled type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"user\\\" [(ngModel)]=\\\"username\\\"\\n                  required #user=\\\"ngModel\\\">\\n                  <button type=\\\"button\\\" style=\\\"width:85px;\\\" [disabled]=\\\"chkEnable.checked\\\" class=\\\"btn btn-info\\\" (click)=\\\"openModal(template)\\\">Search</button>\\n                  <ng-template #template>\\n                    <div class=\\\"modal-header\\\">\\n                      <h4 class=\\\"modal-title pull-left\\\">User Names</h4>\\n                      <button type=\\\"button\\\" class=\\\"close pull-right\\\" name=\\\"button\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">      \\n                        <span aria-hidden=\\\"true\\\">&times;</span></button>\\n                    </div>\\n                    <div class=\\\"modal-body\\\">\\n                      <select ng-model=\\\"selectusers\\\" class=\\\"form-control\\\" ng-app [(ngModel)]=\\\"user_ID\\\" (change)=\\\"onUserChange($event)\\\" name=\\\"selectusers\\\">\\n                      <option value=\\\"\\\" selected disabled hidden>Choose here</option>\\n                     <option *ngFor = \\\"let user of users\\\" value={{user.User_ID}} >{{user.FirstName}}  {{user.LastName}} </option>\\n                     </select>\\n                   \\n                    </div> <div class=\\\"modal-footer\\\">\\n                        <div class=\\\"pull-right\\\">\\n                          <button class=\\\"btn btn-primary\\\" (click)=\\\"modalRef.hide()\\\">OK</button>\\n                        </div>\\n                      </div>\\n                  </ng-template>\\n                  <div *ngIf=\\\"user.touched && user.invalid\\\">\\n                    <span class=\\\"error\\\" *ngIf=\\\"user.errors?.required\\\">User is required</span>\\n                  </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n        </div>\\n        <div class=\\\"panel-footer\\\">\\n          <div class=\\\"pull-right\\\">\\n            <button class=\\\"btn btn-md btn-primary\\\" style=\\\"width:85px;\\\" [disabled]=\\\"taskForm.invalid\\\">{{ SubmitBtnName}}</button>            &nbsp;\\n            <button type=\\\"reset\\\" style=\\\"width:85px;\\\" class=\\\"btn btn-success\\\">Reset</button>\\n          </div>\\n          <div class=\\\"clearfix\\\"></div>\\n        </div>\\n      </div>\\n    </div>\\n  </form>\\n</div>\"","import { Component, OnInit, NgProbeToken, TemplateRef } from '@angular/core';\nimport { Form, FormGroup } from '@angular/forms';\nimport { Router,ActivatedRoute,ParamMap } from '@angular/router';\nimport { TaskService } from 'src/app/_services/task.service';\nimport { TaskData } from 'src/app/_models/task.data';\nimport { ProjectService } from 'src/app/_services/project.service';\nimport { ProjectData } from 'src/app/_models/project.data';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { UserService } from 'src/app/_services/user.service';\nimport { UserData } from 'src/app/_models/user.data';\nimport { ParentTaskData } from 'src/app/_models/parenttask.data';\nimport { switchMap } from 'rxjs/operators';\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.css']\n})\nexport class TaskComponent implements OnInit {\n  private title: string = 'Add Task';\n private  SubmitBtnName: string = 'Add Task';\n  private project_ID: number;\n  private projectname: string;\n  private user_ID: string;\n  private username: string; \n  private parenttask: string;\n  private parentid: number;\n  private isChecked:boolean;\n    private todate = new Date();\n  tasks: TaskData[]=[];\n  projects: ProjectData[];\n  parenttasks: ParentTaskData[]; \n  isEdit: boolean;\n  taskId: number;\n  taskData: TaskData = { Task_ID: null, Parent_ID: null, Project_ID: null, TaskName: '', Start_Date:  new Date(), End_Date: this.todate, Priority: 0, Status: '', Users:null, ParentTask:null,User_ID:null }\n  parenttaskData: ParentTaskData = { Parent_ID: null, Parent_Task: '' }\n  projectData: ProjectData = { Project_ID: null, ProjectName: '', StartDate: null, EndDate:  new Date(), Priority: null, User_ID: null, Users: null,Tasks:null }\n  users: UserData[];\n  userData: UserData = { User_ID: null, FirstName: '', LastName: '', Employee_ID: null, Project_ID: null, Task_ID: null }\n\n  constructor(private modalService: BsModalService, private userService: UserService, private projectService: ProjectService, private router: Router, private taskService: TaskService,\n   private route: ActivatedRoute) { } // {2}\n  ngOnInit() {\n      let id = this.route.snapshot.paramMap.get('id');\n      if (id != null){\n      this.edit(parseInt(id));\n\n    }\n \n    this.taskService.getparentTasks()\n      .subscribe(response => {\n        this.parenttasks = response;\n        if(this.taskId != null && this.taskId !=0 && this.parentid != null && this.parentid !=0)\n        this.parenttask = this.parenttasks.filter(x=> x.Parent_ID == this.parentid)[0].Parent_Task;\n      })\n    this.projectService.getProjects()\n      .subscribe(response => {\n        this.projects = response;\n        if(this.taskId != null && this.taskId !=0 && this.project_ID != null && this.project_ID !=0)\n        this.projectname = this.projects.filter(x=> x.Project_ID == this.project_ID)[0].ProjectName;\n      })\n    this.userService.getUsers()\n      .subscribe(response => {\n        this.users = response;\n        if(this.taskId != null && this.taskId !=0 && this.user_ID != null && this.user_ID !='')\n        this.username = this.users.filter(x=> x.User_ID.toString() == this.user_ID)[0].FirstName +' '+ this.users.filter(x=> x.User_ID.toString() == this.user_ID)[0].LastName ;\n      });\n        this.todate.setDate( this.todate.getDate() + 1 );\n  }\n  public modalRef: BsModalRef; // {1}\n\n  public openModal(template: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(template);// {3}\n  }\n\n  public closeModal(template: TemplateRef<any>) {\n    // this.userBodyTextname=template.elementRef.\n    this.modalService.hide(1);\n    //search(); \n  }\n  onChange(event: any) {\n    //console.log(event);\n    this.projectname = event.target.options[event.target.options.selectedIndex].text;\n    this.project_ID = event.target.options[event.target.options.selectedIndex].value;\n    // console.log(text);\n\n  }\n  onUserChange(event: any) {\n    //console.log(event);\n    this.username = event.target.options[event.target.options.selectedIndex].text;\n    this.user_ID = event.target.options[event.target.options.selectedIndex].value;\n    // console.log(text);\n  }\n  ontaskChange(event: any) {\n    //console.log(event);\n     this.parenttask = event.value[0].Parent_Task;\n     this.parentid = event.value[0].Parent_ID;\n    // console.log(Parent_IDtext);Parent_ID\n\n  }\n  submit(form: FormGroup) {\n    const request = form.value;\n    if (this.user_ID!=null){\n    request.user_ID = this.user_ID.toString();\n    }\n    request.Project_ID = this.project_ID.toString();\n    if (this.parentid!=null){\n    request.Parent_ID = this.parentid.toString();\n    }\n    if (!this.isEdit) {\n      this.taskService.saveTask(request)\n        .subscribe(response => {\n          this.tasks.push(response);\n          confirm('Task Details Saved Successfully');\n        }, error => {\n          for (const key of Object.keys(error.error.ModelState)) {\n            for (const err of error.error.ModelState[key]) {\n              alert(err);\n            }\n          }\n        }, () => {\n          form.reset();\n\n        })\n    } else {\n      request.Task_ID = this.taskId;\n      this.taskService.saveTask(request)\n        .subscribe(task => {\n          var tskIndex = this.tasks.findIndex(tsk => tsk.Task_ID == this.taskId);\n\n          if (tskIndex != -1) {\n            this.tasks[tskIndex] = task;\n          }\n          confirm('Task Details Updated Successfully');\n          this.router.navigate(['/viewtask']);\n        }, error => {\n          for (const key of Object.keys(error.error.ModelState)) {\n            for (const err of error.error.ModelState[key]) {\n              alert(err);\n            }\n          }\n        }, () => {\n          form.reset();\n          this.isEdit = false;\n        })\n    }\n  }\n\n  delete(id: number) {\n    let isDelete = confirm('Do you wish to delete the Task?')\n\n    if (isDelete) {\n      this.taskService.deleteTask(id)\n        .subscribe(response => {\n          if (response) {\n            const projIndex = this.tasks.findIndex(proj => proj.Task_ID == id);\n            if (projIndex != -1) {\n              this.tasks.splice(projIndex, 1);\n            }\n          }\n        });\n    }\n  }\n\n  edit(id: number) {\nthis.title = 'Update Task';\nthis.taskId = id;\n  this.SubmitBtnName = 'Update';\n    this.taskService.getTask(id)\n      .subscribe(task => {\n        this.taskData.Parent_ID = task.Parent_ID;\n        this.taskData.Project_ID = task.Project_ID;\n        this.taskData.TaskName = task.TaskName;\n        this.taskData.End_Date = task.End_Date;\n        this.taskData.Start_Date = task.Start_Date;\n        this.taskData.Priority = task.Priority;\n        this.taskData.Status = task.Status;\n        this.taskData.User_ID = task.User_ID;\n        this.project_ID = task.Project_ID;\n        this.parentid = task.Parent_ID;\n        \n        this.user_ID = task.User_ID.toString();\n        this.isEdit = true;\n        this.taskId = id;\n        \n      })\n  }\n\n  view(id: number) {\n    this.router.navigate(['/tasks', id]);\n  }\n\n  config = {\n            displayKey:\"Parent_Task\" ,//if objects array passed which key to be displayed defaults to description,\n            search:true//enables the search plugin to search in the list\n          }\n          \n    singleSelect: any = [];      \n\n}\n","module.exports = \".form-control{\\r\\n    width: 350px;\\r\\n    display: inline;\\r\\n    margin-right: 5px;\\r\\n}\\r\\n.row{\\r\\n    margin-top: 5px;\\r\\n    margin-bottom: 5px;\\r\\n}\\r\\n.btn btn-primary\\r\\n{\\r\\npadding-right: 10px;\\r\\n}\\r\\n.error {\\r\\n    color: red;    \\r\\n    font-size: 12px;\\r\\n    font-style: italic;\\r\\n}\"","module.exports = \"<div>\\n  <form #userForm=\\\"ngForm\\\" (ngSubmit)=\\\"submit(userForm)\\\" name=\\\"ngform\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"panel panel-primary\\\">\\n        <div class=\\\"panel-heading\\\">Add User</div>\\n        <div class=\\\"panel-body\\\">\\n          <div class=\\\"form-group\\\" [class.has-error]=\\\"firstName.touched && firstName.invalid\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-3\\\">\\n                <label for=\\\"firstName\\\" class=\\\"control-label\\\">First Name</label>\\n              </div>\\n              <div class=\\\"col-sm-8\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"FirstName\\\" placeholder=\\\"Enter First Name\\\" name=\\\"FirstName\\\" [(ngModel)]=\\\"userData.FirstName\\\"\\n                  required #firstName=\\\"ngModel\\\" maxlength=\\\"50\\\">\\n                  <div *ngIf=\\\"firstName.touched && firstName.invalid\\\">\\n                    <span class=\\\"error\\\" *ngIf=\\\"firstName.errors?.required\\\">First Name is required</span>\\n                    <span class=\\\"error\\\" *ngIf=\\\"firstName.errors?.minlength\\\">Minimum length is\\n                {{firstName.errors.minlength.requiredLength}}</span>\\n                  </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\" [class.has-error]=\\\"lastName.touched && lastName.invalid\\\">\\n            <div class=\\\"row \\\">\\n              <div class=\\\"col-sm-3 \\\">\\n                <label for=\\\"txtLastName\\\">Last Name:</label>\\n              </div>\\n              <div class=\\\"col-sm-8 \\\">\\n                <input id=\\\"LastName\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Last Name\\\" name=\\\"LastName\\\" [(ngModel)]=\\\"userData.LastName\\\"\\n                  required #lastName=\\\"ngModel\\\" maxlength=\\\"50\\\">\\n\\n                  <div *ngIf=\\\"lastName.touched && lastName.invalid\\\">\\n                    <span class=\\\"error\\\" *ngIf=\\\"lastName.errors?.required\\\">Last Name is required</span>\\n                    <span class=\\\"error\\\" *ngIf=\\\"lastName.errors?.minlength\\\">Minimum length is\\n                {{lastName.errors.minlength.requiredLength}}</span>\\n                  </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\" [class.has-error]=\\\"EmployeeId.touched && EmployeeId.invalid\\\">\\n            <div class=\\\"row \\\">\\n              <div class=\\\"col-sm-3 \\\">\\n                <label for=\\\"txtEmployeeid\\\">Employee ID:</label>\\n              </div>\\n              <div class=\\\"col-sm-8 \\\">\\n                <input id=\\\"Employee_ID\\\" type=\\\"number\\\" min=\\\"1\\\" placeholder=\\\"Enter Employee ID\\\" class=\\\"form-control\\\" name=\\\"Employee_ID\\\" [(ngModel)]=\\\"userData.Employee_ID\\\"\\n                  required #EmployeeId=\\\"ngModel\\\" required>\\n\\n                  <div *ngIf=\\\"EmployeeId.touched && EmployeeId.invalid\\\">\\n                    <span class=\\\"error\\\" *ngIf=\\\"EmployeeId.errors?.required\\\">Employee ID is required</span>\\n                  </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"panel-footer\\\">\\n          <div class=\\\"pull-right\\\">\\n            <button class=\\\"btn btn-md btn-primary\\\" style=\\\"width:80px;\\\" [disabled]=\\\"userForm.invalid\\\">Submit</button> &nbsp;\\n            <button type=\\\"reset\\\" class=\\\"btn btn-success\\\" style=\\\"width:80px;\\\">Reset</button>\\n          </div>\\n          <div class=\\\"clearfix\\\"></div>\\n        </div>\\n      </div>\\n    </div>\\n  </form>\\n  <div style=\\\"margin-left: 20px;\\\">\\n    <div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-5\\\">\\n            <input id=\\\"Search\\\" type=\\\"text\\\" placeholder=\\\"Enter text to search\\\" class=\\\"form-control\\\" name=\\\"Search\\\" [(ngModel)]=\\\"UserSearch\\\"\\n            required #Search=\\\"ngModel\\\"></div>\\n        <div class=\\\"col-sm-7\\\" style=\\\"padding-left: 65px;\\\">\\n          <label for=\\\"lblSort\\\">Sort By: </label>&nbsp;\\n          <button name=\\\"FirstName\\\" class=\\\"btn btn-primary btn-md\\\" style=\\\"width:80px;\\\" id=\\\"FirstName\\\" (click)=\\\"sort('FirstName')\\\">FirstName\\n            </button>&nbsp;\\n          <button name=\\\"LastName\\\" class=\\\"btn btn-primary btn-md\\\" style=\\\"width:80px;\\\" id=\\\"LastName\\\" (click)=\\\"sort('LastName')\\\">LastName\\n            </button>&nbsp; \\n          <button name=\\\"Id\\\" class=\\\"btn btn-primary btn-md\\\" style=\\\"width:80px;\\\" id=\\\"Id\\\" (click)=\\\"sort('Id')\\\">Emp ID\\n            </button>&nbsp;&nbsp;&nbsp;&nbsp;\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\" *ngFor=\\\"let usr of users |filter: UserSearch\\\">\\n        <div class=\\\"col-sm-8\\\">\\n          <ul class=\\\"list-group\\\">\\n            <li class=\\\"list-group-item list-group-item-info\\\" style=\\\"background-color:lightgrey;\\\">{{usr.FirstName}}</li>\\n            <li class=\\\"list-group-item list-group-item-info\\\" style=\\\"background-color:lightgrey;\\\">{{usr.LastName}}</li>\\n            <li class=\\\"list-group-item list-group-item-info\\\" style=\\\"background-color:lightgrey;\\\">{{usr.Employee_ID}}</li>\\n          </ul>\\n        </div>\\n        <div class=\\\"col-sm-4\\\" >\\n          <div class=\\\"row pu\\\">\\n          <div class=\\\"col-sm-2\\\">\\n            <button class=\\\"btn btn-primary btn-md\\\" (click)=\\\"edit(usr.User_ID)\\\" name=\\\"Edit\\\" id=\\\"Edit\\\" style=\\\"width:80px;\\\">  Edit\\n            </button></div>\\n          </div>\\n          <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-2\\\">\\n            <button class=\\\"btn btn-primary btn-md\\\" (click)=\\\"delete(usr.User_ID)\\\" name=\\\"Delete\\\" id=\\\"Delete\\\" style=\\\"width:80px;\\\">  Delete\\n            </button>\\n          </div>\\n          </div>\\n          <div class=\\\"col-sm-2\\\">\\n          </div>\\n        </div>\\n      </div>\\n\\n\\n\\n\\n\\n    </div>\\n\\n  </div>\"","import { Component, OnInit, NgProbeToken, TemplateRef } from '@angular/core';\nimport { Form, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/_services/user.service';\nimport { UserData } from 'src/app/_models/user.data';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\n\n\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n  private user_ID: string;\n  private username: string;\n\n  users: UserData[];\n  isEdit: boolean;\n  userId: number;\n  userData: UserData = { User_ID: null, FirstName: '', LastName: '', Employee_ID: null, Project_ID: null, Task_ID: null }\n\n\n  ngOnInit() {\n    this.userService.getUsers()\n      .subscribe(response => {\n        this.users = response;\n        console.log(response);\n      });\n\n    this.user_ID = \"\";\n   \n  }\n  public modalRef: BsModalRef; // {1}\n  constructor(private modalService: BsModalService, private userService: UserService, private router: Router) { } // {2}\n\n\n  public openModal(template: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(template);// {3}\n  }\n\n  public closeModal(template: TemplateRef<any>) {\n    this.modalService.hide(1);\n  }\n  \n  submit(form: FormGroup) {\n    const request = form.value;\n\n    if (!this.isEdit) {\n      this.userService.saveUser(request)\n        .subscribe(response => {\n          this.users.push(response);\nconfirm('User Details Updated Successfully');\n        }, error => {\n          for (const key of Object.keys(error.error.ModelState)) {\n            for (const err of error.error.ModelState[key]) {\n              alert(err);\n            }\n          }\n        }, () => { \n          form.reset();\n        })\n    } else {\n      request.User_ID = this.userId;\n      this.userService.saveUser(request)\n        .subscribe(user => {\n          var userIndex = this.users.findIndex(usr => usr.User_ID == this.userId);\n          if (userIndex != -1) {\n            console.log(user);\n            this.users[userIndex] = user;\n          }\n          confirm('User Details Updated Successfully');\n        }, error => {\n          for (const key of Object.keys(error.error.ModelState)) {\n            for (const err of error.error.ModelState[key]) {\n              alert(err);\n            }\n          }\n        }, () => {\n          form.reset();\n          this.isEdit = false;\n        })\n    }\n  }\n\n  delete(id: number) {\n    let isDelete = confirm('Do you wish to delete the User?')\n\n    if (isDelete) {\n      this.userService.deleteUser(id)\n        .subscribe(response => {\n          if (response) {\n            const userIndex = this.users.findIndex(user => user.User_ID == id);\n            if (userIndex != -1) {\n              this.users.splice(userIndex, 1);\n            }\n          }\n        });\n    }\n  }\n\n  edit(id: number) {\n    this.userService.getUser(id)\n      .subscribe(user => {\n        this.userData.FirstName = user.FirstName;\n        this.userData.LastName = user.LastName;\n        this.userData.Employee_ID = user.Employee_ID;\n        this.userData.Project_ID = user.Project_ID;\n        this.userData.Task_ID = user.Task_ID;\n        this.isEdit = true;\n        this.userId = id;\n      })\n  }\n  sort(param: any) {\n    if (param == 'FirstName') {\n      this.userService.getUsers()\n        .subscribe(response => {\n          this.users = response.sort((a, b) => a.FirstName.localeCompare(b.FirstName));\n        })\n    }\n    if (param == 'LastName') {\n      this.userService.getUsers()\n        .subscribe(response => {\n          this.users = response.sort((a, b) => a.LastName.localeCompare(b.LastName));\n        })\n    } if (param == 'Id') {\n      this.userService.getUsers()\n        .subscribe(response => {\n          this.users = response.sort((a, b) => a.Employee_ID.toString().localeCompare(b.Employee_ID.toString(), undefined, { numeric: true }));\n        })\n    }\n  }\n\n  \t\t\n  view(id: number) {\n    this.router.navigate(['/users', id]);\n  }\n\n}\n","module.exports = \".form-control{\\r\\n    width: 350px;\\r\\n    display: inline;\\r\\n    margin-right: 5px;\\r\\n}\\r\\n.row{\\r\\n    margin-top: 5px;\\r\\n}\\r\\n.btn btn-primary\\r\\n{\\r\\npadding-right: 10px;\\r\\n}\\r\\n.error {\\r\\n    color: red;    \\r\\n    font-size: 12px;\\r\\n    font-style: italic;\\r\\n}\\r\\n.list-group .list-group-item{\\r\\n    width: 500px;\\r\\n}\"","module.exports = \"<div>\\n  <form #viewtaskForm=\\\"ngForm\\\" (ngSubmit)=\\\"submit(viewtaskForm)\\\" name=\\\"ngform\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"panel panel-primary\\\">\\n        <div class=\\\"panel-heading\\\">View Task</div>\\n        <div class=\\\"panel-body\\\">\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"row\\\" style=\\\"padding-bottom: 15px;  border-bottom: 1px dashed blue;\\\">\\n              <div class=\\\"col-sm-6\\\">\\n                <label for=\\\"TaskName\\\" class=\\\"control-label\\\">Project</label>&nbsp;\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"projectname\\\" name=\\\"projectname\\\" [(ngModel)]=\\\"projectname\\\" required #projectName=\\\"ngModel\\\"\\n                  minlength=\\\"10\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"openModal(template)\\\">Search</button>\\n                  <ng-template #template>\\n                    <div class=\\\"modal-header\\\">\\n                      <h4 class=\\\"modal-title pull-left\\\">Project Names</h4>\\n                      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">      \\n                        <span aria-hidden=\\\"true\\\">&times;</span></button>\\n                    </div>\\n                    <div class=\\\"modal-body\\\">\\n                      <select ng-model=\\\"projectName\\\" ng-app (change)=\\\"onChange($event)\\\" name=\\\"modelpopup\\\">\\n                        <option value=\\\"\\\" selected disabled hidden>Choose here</option>\\n                        <option value=\\\"\\\" ></option>\\n                     <option *ngFor = \\\"let proj of projects\\\" value={{proj.Project_ID}} >{{proj.ProjectName}}</option>\\n                     </select>\\n                      <button (click)=\\\"modalRef.hide()\\\">OK</button>\\n                    </div>\\n                  </ng-template>\\n              </div>\\n              <div class=\\\"col-sm-6\\\">\\n                <label for=\\\"lblSort\\\">Sort By: </label>\\n                <button name=\\\"StartDate\\\" class=\\\"btn btn-primary btn-md\\\" style=\\\"width:85px;\\\" id=\\\"StartDate\\\" (click)=\\\"sort('StartDate')\\\">StartDate\\n            </button>&nbsp;\\n                <button name=\\\"EndDate\\\" class=\\\"btn btn-primary btn-md\\\" style=\\\"width:85px;\\\" id=\\\"EndDate\\\" (click)=\\\"sort('EndDate')\\\">EndDate\\n            </button>&nbsp;\\n                <button name=\\\"Priority\\\" class=\\\"btn btn-primary btn-md\\\" style=\\\"width:85px;\\\" id=\\\"Priority\\\" (click)=\\\"sort('Priority')\\\">Priority\\n            </button>&nbsp;\\n                <button name=\\\"Completed\\\" class=\\\"btn btn-primary btn-md\\\" style=\\\"width:85px;\\\" id=\\\"Completed\\\" (click)=\\\"sort('Completed')\\\">Completed\\n            </button></div>\\n            </div>\\n            <div class=\\\"col-sm-12\\\" *ngFor=\\\"let tsk of tasks |filter: project_ID\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-2 pull-left\\\" > Task</div>\\n                <div class=\\\"col-sm-2 pull-left\\\" style=\\\"margin-left: 5px;\\\"> Parent</div>\\n                <div class=\\\"col-sm-1 pull-left\\\"> Priority</div>\\n                <div class=\\\"col-sm-2 pull-left\\\"> Start</div>\\n                <div class=\\\"col-sm-2 pull-left\\\"> End</div>\\n                <div class=\\\"pull-left\\\"></div>\\n              </div>\\n              <div class=\\\"row\\\" >\\n                <div class=\\\"col-sm-2 pull-left\\\" style=\\\"background-color:lightgray; height: 50px; \\\"> {{tsk.TaskName}}</div>\\n                <div class=\\\"col-sm-2 pull-left\\\" style=\\\"background-color:lightgray; height: 50px;margin-left: 5px;\\\"> {{tsk.ParentTask.Parent_Task}}</div>\\n                <div class=\\\"col-sm-1 pull-left\\\"> {{tsk.Priority}}</div>\\n                <div class=\\\"col-sm-2 pull-left\\\"> {{tsk.Start_Date | date:'yyyy-MM-dd'}}</div>\\n                <div class=\\\"col-sm-2 pull-left\\\"> {{tsk.End_Date | date:'yyyy-MM-dd'}}</div>\\n                <div class=\\\"pull-left\\\" *ngIf=\\\"tsk.Status != 'Completed'\\\">\\n                  <button (click)=\\\"view(tsk.Task_ID)\\\" class=\\\"btn btn-primary btn-md\\\" style=\\\"width:80px;\\\" name=\\\"Edit\\\" id=\\\"Edit\\\">  Edit </button> &nbsp;\\n                  <button (click)=\\\"delete(tsk.Task_ID)\\\" class=\\\"btn btn-primary btn-md\\\" style=\\\"width:80px;\\\" name=\\\"Delete\\\" id=\\\"Delete\\\">  End Task </button></div>\\n              </div>\\n            </div>\\n\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </form>\\n</div>\"","import { Component, OnInit, NgProbeToken, TemplateRef } from '@angular/core';\nimport { Form, FormGroup } from '@angular/forms';\nimport { Router,ParamMap } from '@angular/router';\nimport { TaskService } from 'src/app/_services/task.service';\nimport { TaskData } from 'src/app/_models/task.data';\nimport { ProjectService } from 'src/app/_services/project.service';\nimport { ProjectData } from 'src/app/_models/project.data';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { UserService } from 'src/app/_services/user.service';\nimport { UserData } from 'src/app/_models/user.data';\nimport { ParentTaskData } from 'src/app/_models/parenttask.data';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-viewtask',\n  templateUrl: './viewtask.component.html',\n  styleUrls: ['./viewtask.component.css']\n})\nexport class ViewtaskComponent implements OnInit {\n private project_ID: number;\n  private projectname: string;\n  private user_ID: string;\n  private username: string;\n  private parenttask: string;\n  private parentid: number;\n  tasks: TaskData[] = [];\n  projects: ProjectData[];\n  parenttasks: ParentTaskData[]; \n  isEdit: boolean; \n  taskId: number;\n  taskData: TaskData = { Task_ID: null, Parent_ID: null, Project_ID: null, TaskName: '', Start_Date: null, End_Date: null, Priority: null, Status: '', Users:null, ParentTask:null,User_ID:null }\n  parenttaskData: ParentTaskData = { Parent_ID: null, Parent_Task: '' }\n  projectData: ProjectData = { Project_ID: null, ProjectName: '', StartDate: null, EndDate: null, Priority: null, User_ID: null, Users: null,Tasks:null}\n  users: UserData[];\n  userData: UserData = { User_ID: null, FirstName: '', LastName: '', Employee_ID: null, Project_ID: null, Task_ID: null }\n\n  constructor(private modalService: BsModalService, private userService: UserService, private projectService: ProjectService, private router: Router, private taskService: TaskService) { } // {2}\n  ngOnInit() {\nthis.taskService.getparentTasks() \n      .subscribe(response => {\n        this.parenttasks = response;\n        console.log(response);\n      })\n    this.projectService.getProjects()\n      .subscribe(response => {\n        this.projects = response;\n\n      })\n    this.userService.getUsers()\n      .subscribe(response => {\n        this.users = response;\n        console.log(response);\n      });\n      this.taskService.getTasks()\n      .subscribe(response => {\n        this.tasks = response;\n        console.log(response);\n      });\n  }\n  public modalRef: BsModalRef; // {1}\n\n  public openModal(template: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(template);// {3}\n  }\n\n  public closeModal(template: TemplateRef<any>) {\n    // this.userBodyTextname=template.elementRef.\n    this.modalService.hide(1);\n    //search();\n  }\n  onChange(event: any) {\n    //console.log(event);\n    this.projectname = event.target.options[event.target.options.selectedIndex].text;\n    this.project_ID = event.target.options[event.target.options.selectedIndex].value;\n    // console.log(text);\n\n  }\n  onUserChange(event: any) {\n    //console.log(event);\n    this.username = event.target.options[event.target.options.selectedIndex].text;\n    this.user_ID = event.target.options[event.target.options.selectedIndex].value;\n    // console.log(text);\n\n  }\n  ontaskChange(event: any) {\n    //console.log(event);\n    this.parenttask = event.target.options[event.target.options.selectedIndex].text;\n    this.parentid = event.target.options[event.target.options.selectedIndex].value;\n    // console.log(Parent_IDtext);Parent_ID\n\n  }\n  submit(form: FormGroup) {\n    const request = form.value;\n    request.Project_ID = this.project_ID.toString();\n    request.Parent_ID = this.parentid.toString();\n    if (!this.isEdit) {\n      this.taskService.saveTask(request)\n        .subscribe(response => {\n          this.tasks.push(response);\n          console.log(response);\n        }, error => {\n          for (const key of Object.keys(error.error.ModelState)) {\n            for (const err of error.error.ModelState[key]) {\n              alert(err);\n            }\n          }\n        }, () => {\n          form.reset();\n\n        })\n    } else {\n      request.Task_ID = this.taskId;\n      this.taskService.saveTask(request)\n        .subscribe(task => {\n          var tskIndex = this.tasks.findIndex(tsk => tsk.Task_ID == this.taskId);\n\n          if (tskIndex != -1) {\n            this.tasks[tskIndex] = task;\n          }\n          confirm('Task Details Updated Successfully');\n        }, error => {\n          for (const key of Object.keys(error.error.ModelState)) {\n            for (const err of error.error.ModelState[key]) {\n              alert(err);\n            }\n          }\n        }, () => {\n          form.reset();\n          this.isEdit = false;\n        })\n    }\n  }\n\n  delete(id: number) {\n    let isDelete = confirm('Do you wish to End the Task?')\n\n    if (isDelete) {\n      this.taskService.deleteTask(id)\n        .subscribe(task => {\n          var tskIndex = this.tasks.findIndex(tsk => tsk.Task_ID == this.taskId);\n\n          if (tskIndex != -1) {\n            this.tasks[tskIndex].Status='Completed';\n          }\n          confirm('Task has been Completed Successfully');\n          location.reload();\n        }, error => {\n          for (const key of Object.keys(error.error.ModelState)) {\n            for (const err of error.error.ModelState[key]) {\n              alert(err);\n            }\n          }\n        }, () => { \n         // form.reset();\n          this.isEdit = false;\n        })\n    }\n  }\n\n  edit(id: number) {\n    this.taskService.getTask(id)\n      .subscribe(task => {\n        this.taskData.Parent_ID = task.Parent_ID;\n        this.taskData.Project_ID = task.Project_ID;\n        this.taskData.TaskName = task.TaskName;\n        this.taskData.End_Date = task.End_Date;\n        this.taskData.Start_Date = task.Start_Date;\n        this.taskData.Priority = task.Priority;\n        this.taskData.Status = task.Status;\n        this.isEdit = true;\n        this.taskId = id;\n      })\n  }\n\nview(id: number) {\n    this.router.navigate(['/tasks', id]);\n  }\n  sort(param: any) {\n    if (param == 'StartDate') {\n      this.taskService.getTasks()\n        .subscribe(response => {\n          this.tasks = response.sort((a, b) => {\n            return <any>new Date(b.Start_Date) - <any>new Date(a.Start_Date);\n          });\n        })\n    }\n    if (param == 'EndDate') {\n      this.taskService.getTasks()\n        .subscribe(response => {\n          this.tasks = response.sort((a, b) => {\n            return <any>new Date(b.End_Date) - <any>new Date(a.End_Date);\n          });\n        })\n    }\n    if (param == 'Priority') {\n      this.taskService.getTasks()\n        .subscribe(response => {\n          this.tasks = response.sort((a, b) => a.Priority.toString().localeCompare(b.Priority.toString(), undefined, { numeric: true }));\n        });\n    }\n      if (param == 'Completed') {\n      this.taskService.getTasks()\n         .subscribe(response => {\n          this.tasks = response.sort((a, b) => a.Status.toString().localeCompare(b.Status));\n        }); \n      }\n  }\n  \n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { ProjectData } from '../_models/project.data';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectService {\r\n  // private apiUrl: string = 'http://localhost:57022/api/projects';\r\n  private apiUrl: string = 'http://localhost/ProjectManagementService/api/projects';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  saveProject(request: any): Observable<ProjectData> {\r\n    return this.http.post<ProjectData>(this.apiUrl, request);\r\n  }\r\n\r\n  getProjects(): Observable<ProjectData[]> {\r\n    return this.http.get<ProjectData[]>(this.apiUrl + '/GetProjects/');\r\n  }\r\n\r\n  deleteProject(id: number): Observable<ProjectData> {\r\n    return this.http.get<ProjectData>(this.apiUrl + '/DeleteProject/' + id);\r\n  }\r\n\r\n  getProject(id: number): Observable<ProjectData> {\r\n    return this.http.get<ProjectData>(this.apiUrl + '/' + id);\r\n  }\r\n\r\n  updateProject(id: number, request: any): Observable<ProjectData> {\r\n    return this.http.put<ProjectData>(this.apiUrl + '/' + id, request);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { TaskData } from '../_models/task.data';\r\nimport { ParentTaskData } from '../_models/parenttask.data';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TaskService {\r\n  // private apiUrl: string = 'http://localhost:57022/api/tasks';\r\n  private apiUrl: string = 'http://localhost/ProjectManagementService/api/tasks';\r\n  constructor(private http: HttpClient) { }\r\n\r\n  saveTask(request: any): Observable<TaskData> {\r\n    return this.http.post<TaskData>(this.apiUrl, request);\r\n  }\r\n\r\n  getTasks(): Observable<TaskData[]> {\r\n    return this.http.get<TaskData[]>(this.apiUrl);\r\n  }\r\n  getparentTasks(): Observable<ParentTaskData[]> {\r\n    return this.http.get<ParentTaskData[]>(this.apiUrl+\"/GetParentTasks\");\r\n  }\r\n\r\n  deleteTask(id: number): Observable<TaskData> {\r\n    return this.http.get<TaskData>(this.apiUrl + '/DeleteTaskData/' + id);\r\n  }\r\n\r\n  getTask(id: number): Observable<TaskData> {\r\n    return this.http.get<TaskData>(this.apiUrl + '/' + id);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { UserData } from '../_models/user.data';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  // private apiUrl: string = 'http://localhost:57022/api/users';\r\n  private apiUrl: string = 'http://localhost/ProjectManagementService/api/users';\r\n  constructor(private http: HttpClient) { }\r\n\r\n  saveUser(request: any): Observable<UserData> {\r\n    return this.http.post<UserData>(this.apiUrl, request);\r\n  }\r\n\r\n  getUsers(): Observable<UserData[]> {\r\n    return this.http.get<UserData[]>(this.apiUrl +'/GetUsers/');\r\n  }\r\n    \r\n  deleteUser(id: number): Observable<UserData> {\r\n    return this.http.get<UserData>(this.apiUrl + '/DeleteUser/' + id);\r\n  }\r\n\r\n  getUser(id: number): Observable<UserData> {\r\n    return this.http.get<UserData>(this.apiUrl + '/' + id);\r\n  }\r\n \r\n  updateUser(id: number, request: any): Observable<UserData> {\r\n    return this.http.put<UserData>(this.apiUrl + '/' + id, request);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<app-nav></app-nav>\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n\\n</div>\\n\"","import { Component } from '@angular/core';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ProjectManagement-SPA';\n \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms'\nimport { HttpClientModule } from '@angular/common/http'\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\n\nimport { AppComponent } from './app.component';\nimport { ProjectComponent } from './_components/project/project.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NavComponent } from './_components/nav/nav/nav.component';\nimport { TaskComponent } from './_components/task/task.component';\nimport { UserComponent } from './_components/user/user.component';\nimport { ViewtaskComponent } from './_components/viewtask/viewtask.component';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport {AgGridModule} from 'ag-grid-angular/main';\nimport { SelectDropDownModule } from 'ngx-select-dropdown'\n\n\n\n\nconst routes: Routes = [\n  { path: '', component: ProjectComponent },\n  { path: 'projects', component: ProjectComponent },\n  { path: 'tasks', component: TaskComponent },\n   { path: 'tasks/:id', component: TaskComponent },\n  { path: 'users', component: UserComponent },\n  { path: 'viewtask', component: ViewtaskComponent }\n\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProjectComponent,\n    NavComponent,\n    TaskComponent,\n    UserComponent,\n    ViewtaskComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    Ng2SearchPipeModule,\n    BsDropdownModule.forRoot(),\n    TooltipModule.forRoot(),\n    ModalModule.forRoot(),\n    AgGridModule.forRoot(),\n    RouterModule.forRoot(routes),\n    SelectDropDownModule\n    \n  ],\n  providers: [{provide: LocationStrategy, useClass: HashLocationStrategy}],\n  bootstrap: [AppComponent],\n    exports: [BsDropdownModule, TooltipModule, ModalModule]\n\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}